classdef TopLevelModule < nnet.layer.Layer & nnet.layer.Formattable
    %TopLevelModule Auto-generated custom layer
    % Auto-generated by MATLAB on 18-Oct-2022 13:46:49
    
    properties (Learnable)
        % Networks (type dlnetwork)
        
        Param_conv1a
        Param_relu
        Param_conv1b
        Param_pool
        Param_conv2a
        Param_conv2b
        Param_conv3a
        Param_conv3b
        Param_conv4a
        Param_conv4b
        Param_convPa
        Param_convPb
        Param_convDa
        Param_convDb
    end
    
    properties
        % Non-Trainable Parameters
        
        
        Constant_98
        
        
        Constant_95
        
        
        Constant_96
        
        
        Constant_116
        
        
    end
    
    properties (Learnable)
        % Trainable Parameters
        
    end
    
    methods
        function obj = TopLevelModule(Name, Type, InputNames, OutputNames)
            obj.Name = Name;
            obj.Type = Type;
            obj.NumInputs = 1;
            obj.NumOutputs = 2;
            obj.InputNames = InputNames;
            obj.OutputNames = OutputNames;
        end
        
        function [CallMethod_85, div_103] = predict(obj,CallMethod_x_1)
            
            if ~contains(dims(CallMethod_x_1),'U')
                [CallMethod_x_1] = struct('value', CallMethod_x_1, 'rank', ndims(CallMethod_x_1));
            else
                [CallMethod_x_1] = struct('value', CallMethod_x_1, 'rank', int64(ndims(CallMethod_x_1)));
                warning(message('nnet_cnn_pytorchconverter:pytorchconverter:PossibleLossOfRank', 'CallMethod_x_1', 'TopLevelModule'));
            end
            
            import traced_model2.ops.*;
            
            [Constant_98] = makeStructForConstant(int64(obj.Constant_98), int64(0), "Typed");
            [Constant_95] = makeStructForConstant(int64(obj.Constant_95), int64(0), "Typed");
            [Constant_96] = makeStructForConstant(int64(obj.Constant_96), int64(0), "Typed");
            GetAttr_convDb_1 = obj.Param_convDb;
            
            GetAttr_convDb_1_InputFormat1 = '*CSS';
            
            GetAttr_convDa_1 = obj.Param_convDa;
            
            GetAttr_convDa_1_InputFormat1 = '*CSS';
            
            GetAttr_convPb_1 = obj.Param_convPb;
            
            GetAttr_convPb_1_InputFormat1 = '*CSS';
            
            GetAttr_convPa_1 = obj.Param_convPa;
            
            GetAttr_convPa_1_InputFormat1 = '*CSS';
            
            GetAttr_conv4b_1 = obj.Param_conv4b;
            
            GetAttr_conv4b_1_InputFormat1 = '*CSS';
            
            GetAttr_conv4a_1 = obj.Param_conv4a;
            
            GetAttr_conv4a_1_InputFormat1 = '*CSS';
            
            GetAttr_conv3b_1 = obj.Param_conv3b;
            
            GetAttr_conv3b_1_InputFormat1 = '*CSS';
            
            GetAttr_conv3a_1 = obj.Param_conv3a;
            
            GetAttr_conv3a_1_InputFormat1 = '*CSS';
            
            GetAttr_conv2b_1 = obj.Param_conv2b;
            
            GetAttr_conv2b_1_InputFormat1 = '*CSS';
            
            GetAttr_conv2a_1 = obj.Param_conv2a;
            
            GetAttr_conv2a_1_InputFormat1 = '*CSS';
            
            GetAttr_pool_1 = obj.Param_pool;
            
            GetAttr_pool_1_InputFormat1 = '*CSS';
            
            GetAttr_conv1b_1 = obj.Param_conv1b;
            
            GetAttr_conv1b_1_InputFormat1 = '*CSS';
            
            GetAttr_relu_1 = obj.Param_relu;
            
            GetAttr_relu_1_InputFormat1 = '*CSS';
            
            GetAttr_conv1a_1 = obj.Param_conv1a;
            
            GetAttr_conv1a_1_InputFormat1 = '*CSS';
            
            
            [CallMethod_x_1] = labelWithPropagatedFormats(CallMethod_x_1, GetAttr_conv1a_1_InputFormat1);
            [CallMethod_33] = GetAttr_conv1a_1.predict(CallMethod_x_1.value);
            if ~contains(dims(CallMethod_33),'U')
                [CallMethod_33] = struct('value', CallMethod_33, 'rank', ndims(CallMethod_33));
            end
            
            
            [CallMethod_33] = labelWithPropagatedFormats(CallMethod_33, GetAttr_relu_1_InputFormat1);
            [CallMethod_34] = GetAttr_relu_1.predict(CallMethod_33.value);
            if ~contains(dims(CallMethod_34),'U')
                [CallMethod_34] = struct('value', CallMethod_34, 'rank', ndims(CallMethod_34));
            end
            
            
            [CallMethod_34] = labelWithPropagatedFormats(CallMethod_34, GetAttr_conv1b_1_InputFormat1);
            [CallMethod_38] = GetAttr_conv1b_1.predict(CallMethod_34.value);
            if ~contains(dims(CallMethod_38),'U')
                [CallMethod_38] = struct('value', CallMethod_38, 'rank', ndims(CallMethod_38));
            end
            
            
            [CallMethod_38] = labelWithPropagatedFormats(CallMethod_38, GetAttr_relu_1_InputFormat1);
            [CallMethod_39] = GetAttr_relu_1.predict(CallMethod_38.value);
            if ~contains(dims(CallMethod_39),'U')
                [CallMethod_39] = struct('value', CallMethod_39, 'rank', ndims(CallMethod_39));
            end
            
            
            [CallMethod_39] = labelWithPropagatedFormats(CallMethod_39, GetAttr_pool_1_InputFormat1);
            [CallMethod_43] = GetAttr_pool_1.predict(CallMethod_39.value);
            if ~contains(dims(CallMethod_43),'U')
                [CallMethod_43] = struct('value', CallMethod_43, 'rank', ndims(CallMethod_43));
            end
            
            
            [CallMethod_43] = labelWithPropagatedFormats(CallMethod_43, GetAttr_conv2a_1_InputFormat1);
            [CallMethod_44] = GetAttr_conv2a_1.predict(CallMethod_43.value);
            if ~contains(dims(CallMethod_44),'U')
                [CallMethod_44] = struct('value', CallMethod_44, 'rank', ndims(CallMethod_44));
            end
            
            
            [CallMethod_44] = labelWithPropagatedFormats(CallMethod_44, GetAttr_relu_1_InputFormat1);
            [CallMethod_48] = GetAttr_relu_1.predict(CallMethod_44.value);
            if ~contains(dims(CallMethod_48),'U')
                [CallMethod_48] = struct('value', CallMethod_48, 'rank', ndims(CallMethod_48));
            end
            
            
            [CallMethod_48] = labelWithPropagatedFormats(CallMethod_48, GetAttr_conv2b_1_InputFormat1);
            [CallMethod_49] = GetAttr_conv2b_1.predict(CallMethod_48.value);
            if ~contains(dims(CallMethod_49),'U')
                [CallMethod_49] = struct('value', CallMethod_49, 'rank', ndims(CallMethod_49));
            end
            
            
            [CallMethod_49] = labelWithPropagatedFormats(CallMethod_49, GetAttr_relu_1_InputFormat1);
            [CallMethod_53] = GetAttr_relu_1.predict(CallMethod_49.value);
            if ~contains(dims(CallMethod_53),'U')
                [CallMethod_53] = struct('value', CallMethod_53, 'rank', ndims(CallMethod_53));
            end
            
            
            [CallMethod_53] = labelWithPropagatedFormats(CallMethod_53, GetAttr_pool_1_InputFormat1);
            [CallMethod_54] = GetAttr_pool_1.predict(CallMethod_53.value);
            if ~contains(dims(CallMethod_54),'U')
                [CallMethod_54] = struct('value', CallMethod_54, 'rank', ndims(CallMethod_54));
            end
            
            
            [CallMethod_54] = labelWithPropagatedFormats(CallMethod_54, GetAttr_conv3a_1_InputFormat1);
            [CallMethod_58] = GetAttr_conv3a_1.predict(CallMethod_54.value);
            if ~contains(dims(CallMethod_58),'U')
                [CallMethod_58] = struct('value', CallMethod_58, 'rank', ndims(CallMethod_58));
            end
            
            
            [CallMethod_58] = labelWithPropagatedFormats(CallMethod_58, GetAttr_relu_1_InputFormat1);
            [CallMethod_59] = GetAttr_relu_1.predict(CallMethod_58.value);
            if ~contains(dims(CallMethod_59),'U')
                [CallMethod_59] = struct('value', CallMethod_59, 'rank', ndims(CallMethod_59));
            end
            
            
            [CallMethod_59] = labelWithPropagatedFormats(CallMethod_59, GetAttr_conv3b_1_InputFormat1);
            [CallMethod_63] = GetAttr_conv3b_1.predict(CallMethod_59.value);
            if ~contains(dims(CallMethod_63),'U')
                [CallMethod_63] = struct('value', CallMethod_63, 'rank', ndims(CallMethod_63));
            end
            
            
            [CallMethod_63] = labelWithPropagatedFormats(CallMethod_63, GetAttr_relu_1_InputFormat1);
            [CallMethod_64] = GetAttr_relu_1.predict(CallMethod_63.value);
            if ~contains(dims(CallMethod_64),'U')
                [CallMethod_64] = struct('value', CallMethod_64, 'rank', ndims(CallMethod_64));
            end
            
            
            [CallMethod_64] = labelWithPropagatedFormats(CallMethod_64, GetAttr_pool_1_InputFormat1);
            [CallMethod_68] = GetAttr_pool_1.predict(CallMethod_64.value);
            if ~contains(dims(CallMethod_68),'U')
                [CallMethod_68] = struct('value', CallMethod_68, 'rank', ndims(CallMethod_68));
            end
            
            
            [CallMethod_68] = labelWithPropagatedFormats(CallMethod_68, GetAttr_conv4a_1_InputFormat1);
            [CallMethod_69] = GetAttr_conv4a_1.predict(CallMethod_68.value);
            if ~contains(dims(CallMethod_69),'U')
                [CallMethod_69] = struct('value', CallMethod_69, 'rank', ndims(CallMethod_69));
            end
            
            
            [CallMethod_69] = labelWithPropagatedFormats(CallMethod_69, GetAttr_relu_1_InputFormat1);
            [CallMethod_73] = GetAttr_relu_1.predict(CallMethod_69.value);
            if ~contains(dims(CallMethod_73),'U')
                [CallMethod_73] = struct('value', CallMethod_73, 'rank', ndims(CallMethod_73));
            end
            
            
            [CallMethod_73] = labelWithPropagatedFormats(CallMethod_73, GetAttr_conv4b_1_InputFormat1);
            [CallMethod_74] = GetAttr_conv4b_1.predict(CallMethod_73.value);
            if ~contains(dims(CallMethod_74),'U')
                [CallMethod_74] = struct('value', CallMethod_74, 'rank', ndims(CallMethod_74));
            end
            
            
            [CallMethod_74] = labelWithPropagatedFormats(CallMethod_74, GetAttr_relu_1_InputFormat1);
            [CallMethod_77] = GetAttr_relu_1.predict(CallMethod_74.value);
            if ~contains(dims(CallMethod_77),'U')
                [CallMethod_77] = struct('value', CallMethod_77, 'rank', ndims(CallMethod_77));
            end
            
            
            [CallMethod_77] = labelWithPropagatedFormats(CallMethod_77, GetAttr_convPa_1_InputFormat1);
            [CallMethod_81] = GetAttr_convPa_1.predict(CallMethod_77.value);
            if ~contains(dims(CallMethod_81),'U')
                [CallMethod_81] = struct('value', CallMethod_81, 'rank', ndims(CallMethod_81));
            end
            
            
            [CallMethod_81] = labelWithPropagatedFormats(CallMethod_81, GetAttr_relu_1_InputFormat1);
            [CallMethod_82] = GetAttr_relu_1.predict(CallMethod_81.value);
            if ~contains(dims(CallMethod_82),'U')
                [CallMethod_82] = struct('value', CallMethod_82, 'rank', ndims(CallMethod_82));
            end
            
            
            [CallMethod_82] = labelWithPropagatedFormats(CallMethod_82, GetAttr_convPb_1_InputFormat1);
            [CallMethod_85] = GetAttr_convPb_1.predict(CallMethod_82.value);
            if ~contains(dims(CallMethod_85),'U')
                [CallMethod_85] = struct('value', CallMethod_85, 'rank', ndims(CallMethod_85));
            end
            
            
            [CallMethod_77] = labelWithPropagatedFormats(CallMethod_77, GetAttr_convDa_1_InputFormat1);
            [CallMethod_89] = GetAttr_convDa_1.predict(CallMethod_77.value);
            if ~contains(dims(CallMethod_89),'U')
                [CallMethod_89] = struct('value', CallMethod_89, 'rank', ndims(CallMethod_89));
            end
            
            
            [CallMethod_89] = labelWithPropagatedFormats(CallMethod_89, GetAttr_relu_1_InputFormat1);
            [CallMethod_90] = GetAttr_relu_1.predict(CallMethod_89.value);
            if ~contains(dims(CallMethod_90),'U')
                [CallMethod_90] = struct('value', CallMethod_90, 'rank', ndims(CallMethod_90));
            end
            
            
            [CallMethod_90] = labelWithPropagatedFormats(CallMethod_90, GetAttr_convDb_1_InputFormat1);
            [CallMethod_93] = GetAttr_convDb_1.predict(CallMethod_90.value);
            if ~contains(dims(CallMethod_93),'U')
                [CallMethod_93] = struct('value', CallMethod_93, 'rank', ndims(CallMethod_93));
            end
            
            [Constant_116] = makeStructForConstant(int64(obj.Constant_116), int64(1), "Typed");
            % Placeholder function for aten::norm.
            [CallMethod_93, Constant_95, Constant_116, Constant_98] = permuteToPyTorchDimensionOrder(CallMethod_93, Constant_95, Constant_116, Constant_98);
            [norm_dn_1] = pyAtenNorm(CallMethod_93, Constant_95, Constant_116, Constant_98);
            [unsqueeze_102] = pyUnsqueeze(norm_dn_1, Constant_96);
            [div_103] = pyElementwiseBinary(CallMethod_93, unsqueeze_102, 'rdivide');
            
            CallMethod_85 = CallMethod_85.value ;
            
            div_103 = div_103.value ;
            
        end
        
        
        
        function [CallMethod_85, div_103] = forward(obj,CallMethod_x_1)
            
            if ~contains(dims(CallMethod_x_1),'U')
                [CallMethod_x_1] = struct('value', CallMethod_x_1, 'rank', ndims(CallMethod_x_1));
            else
                [CallMethod_x_1] = struct('value', CallMethod_x_1, 'rank', int64(ndims(CallMethod_x_1)));
                warning(message('nnet_cnn_pytorchconverter:pytorchconverter:PossibleLossOfRank', 'CallMethod_x_1', 'TopLevelModule'));
            end
            
            import traced_model2.ops.*;
            
            [Constant_98] = makeStructForConstant(int64(obj.Constant_98), int64(0), "Typed");
            [Constant_95] = makeStructForConstant(int64(obj.Constant_95), int64(0), "Typed");
            [Constant_96] = makeStructForConstant(int64(obj.Constant_96), int64(0), "Typed");
            GetAttr_convDb_1 = obj.Param_convDb;
            
            GetAttr_convDb_1_InputFormat1 = '*CSS';
            
            GetAttr_convDa_1 = obj.Param_convDa;
            
            GetAttr_convDa_1_InputFormat1 = '*CSS';
            
            GetAttr_convPb_1 = obj.Param_convPb;
            
            GetAttr_convPb_1_InputFormat1 = '*CSS';
            
            GetAttr_convPa_1 = obj.Param_convPa;
            
            GetAttr_convPa_1_InputFormat1 = '*CSS';
            
            GetAttr_conv4b_1 = obj.Param_conv4b;
            
            GetAttr_conv4b_1_InputFormat1 = '*CSS';
            
            GetAttr_conv4a_1 = obj.Param_conv4a;
            
            GetAttr_conv4a_1_InputFormat1 = '*CSS';
            
            GetAttr_conv3b_1 = obj.Param_conv3b;
            
            GetAttr_conv3b_1_InputFormat1 = '*CSS';
            
            GetAttr_conv3a_1 = obj.Param_conv3a;
            
            GetAttr_conv3a_1_InputFormat1 = '*CSS';
            
            GetAttr_conv2b_1 = obj.Param_conv2b;
            
            GetAttr_conv2b_1_InputFormat1 = '*CSS';
            
            GetAttr_conv2a_1 = obj.Param_conv2a;
            
            GetAttr_conv2a_1_InputFormat1 = '*CSS';
            
            GetAttr_pool_1 = obj.Param_pool;
            
            GetAttr_pool_1_InputFormat1 = '*CSS';
            
            GetAttr_conv1b_1 = obj.Param_conv1b;
            
            GetAttr_conv1b_1_InputFormat1 = '*CSS';
            
            GetAttr_relu_1 = obj.Param_relu;
            
            GetAttr_relu_1_InputFormat1 = '*CSS';
            
            GetAttr_conv1a_1 = obj.Param_conv1a;
            
            GetAttr_conv1a_1_InputFormat1 = '*CSS';
            
            
            [CallMethod_x_1] = labelWithPropagatedFormats(CallMethod_x_1, GetAttr_conv1a_1_InputFormat1);
            [CallMethod_33] = GetAttr_conv1a_1.forward(CallMethod_x_1.value);
            if ~contains(dims(CallMethod_33),'U')
                [CallMethod_33] = struct('value', CallMethod_33, 'rank', ndims(CallMethod_33));
            end
            
            
            [CallMethod_33] = labelWithPropagatedFormats(CallMethod_33, GetAttr_relu_1_InputFormat1);
            [CallMethod_34] = GetAttr_relu_1.forward(CallMethod_33.value);
            if ~contains(dims(CallMethod_34),'U')
                [CallMethod_34] = struct('value', CallMethod_34, 'rank', ndims(CallMethod_34));
            end
            
            
            [CallMethod_34] = labelWithPropagatedFormats(CallMethod_34, GetAttr_conv1b_1_InputFormat1);
            [CallMethod_38] = GetAttr_conv1b_1.forward(CallMethod_34.value);
            if ~contains(dims(CallMethod_38),'U')
                [CallMethod_38] = struct('value', CallMethod_38, 'rank', ndims(CallMethod_38));
            end
            
            
            [CallMethod_38] = labelWithPropagatedFormats(CallMethod_38, GetAttr_relu_1_InputFormat1);
            [CallMethod_39] = GetAttr_relu_1.forward(CallMethod_38.value);
            if ~contains(dims(CallMethod_39),'U')
                [CallMethod_39] = struct('value', CallMethod_39, 'rank', ndims(CallMethod_39));
            end
            
            
            [CallMethod_39] = labelWithPropagatedFormats(CallMethod_39, GetAttr_pool_1_InputFormat1);
            [CallMethod_43] = GetAttr_pool_1.forward(CallMethod_39.value);
            if ~contains(dims(CallMethod_43),'U')
                [CallMethod_43] = struct('value', CallMethod_43, 'rank', ndims(CallMethod_43));
            end
            
            
            [CallMethod_43] = labelWithPropagatedFormats(CallMethod_43, GetAttr_conv2a_1_InputFormat1);
            [CallMethod_44] = GetAttr_conv2a_1.forward(CallMethod_43.value);
            if ~contains(dims(CallMethod_44),'U')
                [CallMethod_44] = struct('value', CallMethod_44, 'rank', ndims(CallMethod_44));
            end
            
            
            [CallMethod_44] = labelWithPropagatedFormats(CallMethod_44, GetAttr_relu_1_InputFormat1);
            [CallMethod_48] = GetAttr_relu_1.forward(CallMethod_44.value);
            if ~contains(dims(CallMethod_48),'U')
                [CallMethod_48] = struct('value', CallMethod_48, 'rank', ndims(CallMethod_48));
            end
            
            
            [CallMethod_48] = labelWithPropagatedFormats(CallMethod_48, GetAttr_conv2b_1_InputFormat1);
            [CallMethod_49] = GetAttr_conv2b_1.forward(CallMethod_48.value);
            if ~contains(dims(CallMethod_49),'U')
                [CallMethod_49] = struct('value', CallMethod_49, 'rank', ndims(CallMethod_49));
            end
            
            
            [CallMethod_49] = labelWithPropagatedFormats(CallMethod_49, GetAttr_relu_1_InputFormat1);
            [CallMethod_53] = GetAttr_relu_1.forward(CallMethod_49.value);
            if ~contains(dims(CallMethod_53),'U')
                [CallMethod_53] = struct('value', CallMethod_53, 'rank', ndims(CallMethod_53));
            end
            
            
            [CallMethod_53] = labelWithPropagatedFormats(CallMethod_53, GetAttr_pool_1_InputFormat1);
            [CallMethod_54] = GetAttr_pool_1.forward(CallMethod_53.value);
            if ~contains(dims(CallMethod_54),'U')
                [CallMethod_54] = struct('value', CallMethod_54, 'rank', ndims(CallMethod_54));
            end
            
            
            [CallMethod_54] = labelWithPropagatedFormats(CallMethod_54, GetAttr_conv3a_1_InputFormat1);
            [CallMethod_58] = GetAttr_conv3a_1.forward(CallMethod_54.value);
            if ~contains(dims(CallMethod_58),'U')
                [CallMethod_58] = struct('value', CallMethod_58, 'rank', ndims(CallMethod_58));
            end
            
            
            [CallMethod_58] = labelWithPropagatedFormats(CallMethod_58, GetAttr_relu_1_InputFormat1);
            [CallMethod_59] = GetAttr_relu_1.forward(CallMethod_58.value);
            if ~contains(dims(CallMethod_59),'U')
                [CallMethod_59] = struct('value', CallMethod_59, 'rank', ndims(CallMethod_59));
            end
            
            
            [CallMethod_59] = labelWithPropagatedFormats(CallMethod_59, GetAttr_conv3b_1_InputFormat1);
            [CallMethod_63] = GetAttr_conv3b_1.forward(CallMethod_59.value);
            if ~contains(dims(CallMethod_63),'U')
                [CallMethod_63] = struct('value', CallMethod_63, 'rank', ndims(CallMethod_63));
            end
            
            
            [CallMethod_63] = labelWithPropagatedFormats(CallMethod_63, GetAttr_relu_1_InputFormat1);
            [CallMethod_64] = GetAttr_relu_1.forward(CallMethod_63.value);
            if ~contains(dims(CallMethod_64),'U')
                [CallMethod_64] = struct('value', CallMethod_64, 'rank', ndims(CallMethod_64));
            end
            
            
            [CallMethod_64] = labelWithPropagatedFormats(CallMethod_64, GetAttr_pool_1_InputFormat1);
            [CallMethod_68] = GetAttr_pool_1.forward(CallMethod_64.value);
            if ~contains(dims(CallMethod_68),'U')
                [CallMethod_68] = struct('value', CallMethod_68, 'rank', ndims(CallMethod_68));
            end
            
            
            [CallMethod_68] = labelWithPropagatedFormats(CallMethod_68, GetAttr_conv4a_1_InputFormat1);
            [CallMethod_69] = GetAttr_conv4a_1.forward(CallMethod_68.value);
            if ~contains(dims(CallMethod_69),'U')
                [CallMethod_69] = struct('value', CallMethod_69, 'rank', ndims(CallMethod_69));
            end
            
            
            [CallMethod_69] = labelWithPropagatedFormats(CallMethod_69, GetAttr_relu_1_InputFormat1);
            [CallMethod_73] = GetAttr_relu_1.forward(CallMethod_69.value);
            if ~contains(dims(CallMethod_73),'U')
                [CallMethod_73] = struct('value', CallMethod_73, 'rank', ndims(CallMethod_73));
            end
            
            
            [CallMethod_73] = labelWithPropagatedFormats(CallMethod_73, GetAttr_conv4b_1_InputFormat1);
            [CallMethod_74] = GetAttr_conv4b_1.forward(CallMethod_73.value);
            if ~contains(dims(CallMethod_74),'U')
                [CallMethod_74] = struct('value', CallMethod_74, 'rank', ndims(CallMethod_74));
            end
            
            
            [CallMethod_74] = labelWithPropagatedFormats(CallMethod_74, GetAttr_relu_1_InputFormat1);
            [CallMethod_77] = GetAttr_relu_1.forward(CallMethod_74.value);
            if ~contains(dims(CallMethod_77),'U')
                [CallMethod_77] = struct('value', CallMethod_77, 'rank', ndims(CallMethod_77));
            end
            
            
            [CallMethod_77] = labelWithPropagatedFormats(CallMethod_77, GetAttr_convPa_1_InputFormat1);
            [CallMethod_81] = GetAttr_convPa_1.forward(CallMethod_77.value);
            if ~contains(dims(CallMethod_81),'U')
                [CallMethod_81] = struct('value', CallMethod_81, 'rank', ndims(CallMethod_81));
            end
            
            
            [CallMethod_81] = labelWithPropagatedFormats(CallMethod_81, GetAttr_relu_1_InputFormat1);
            [CallMethod_82] = GetAttr_relu_1.forward(CallMethod_81.value);
            if ~contains(dims(CallMethod_82),'U')
                [CallMethod_82] = struct('value', CallMethod_82, 'rank', ndims(CallMethod_82));
            end
            
            
            [CallMethod_82] = labelWithPropagatedFormats(CallMethod_82, GetAttr_convPb_1_InputFormat1);
            [CallMethod_85] = GetAttr_convPb_1.forward(CallMethod_82.value);
            if ~contains(dims(CallMethod_85),'U')
                [CallMethod_85] = struct('value', CallMethod_85, 'rank', ndims(CallMethod_85));
            end
            
            
            [CallMethod_77] = labelWithPropagatedFormats(CallMethod_77, GetAttr_convDa_1_InputFormat1);
            [CallMethod_89] = GetAttr_convDa_1.forward(CallMethod_77.value);
            if ~contains(dims(CallMethod_89),'U')
                [CallMethod_89] = struct('value', CallMethod_89, 'rank', ndims(CallMethod_89));
            end
            
            
            [CallMethod_89] = labelWithPropagatedFormats(CallMethod_89, GetAttr_relu_1_InputFormat1);
            [CallMethod_90] = GetAttr_relu_1.forward(CallMethod_89.value);
            if ~contains(dims(CallMethod_90),'U')
                [CallMethod_90] = struct('value', CallMethod_90, 'rank', ndims(CallMethod_90));
            end
            
            
            [CallMethod_90] = labelWithPropagatedFormats(CallMethod_90, GetAttr_convDb_1_InputFormat1);
            [CallMethod_93] = GetAttr_convDb_1.forward(CallMethod_90.value);
            if ~contains(dims(CallMethod_93),'U')
                [CallMethod_93] = struct('value', CallMethod_93, 'rank', ndims(CallMethod_93));
            end
            
            [Constant_116] = makeStructForConstant(int64(obj.Constant_116), int64(1), "Typed");
            % Placeholder function for aten::norm.
            [CallMethod_93, Constant_95, Constant_116, Constant_98] = permuteToPyTorchDimensionOrder(CallMethod_93, Constant_95, Constant_116, Constant_98);
            [norm_dn_1] = pyAtenNorm(CallMethod_93, Constant_95, Constant_116, Constant_98);
            [unsqueeze_102] = pyUnsqueeze(norm_dn_1, Constant_96);
            [div_103] = pyElementwiseBinary(CallMethod_93, unsqueeze_102, 'rdivide');
            
            CallMethod_85 = CallMethod_85.value ;
            
            div_103 = div_103.value ;
            
        end
        
        
    end
end

